Chat Server
This is a simple chat server implemented in Python using the socket 
library. The server allows clients to connect, send messages, and 
disconnect. Messages can be sent to specific users or broadcasted to all 
connected clients.

Features

•	Connection Handling: The server handles incoming connections from 
clients and manages client disconnections.
•	Message Handling: Clients can send messages to specific users or 
broadcast messages to all connected clients.
•	User Management: The server maintains a dictionary of connected 
clients, subscriptions, and message queues.
•	JSON Communication: Communication between the server and clients 
is done using JSON-formatted messages.

Usage
Prerequisites
•	Python 3.x
Running the Server
1.	Open the terminal and navigate to the directory containing the 
chatServer.py file.
2.	Run the server script: 

python chatServer.py 
3.	The server will listen on the specified IP address and port 
(default is 127.0.0.1:7775).
Connecting Clients
1.	Clients can connect to the server using a TCP socket.
2.	Upon connection, clients receive a welcome message from the 
server.
3.	Clients can send messages in JSON format to interact with the 
server.
JSON Message Format
The server expects messages to be in the following JSON format:
Json code
{
    "action": "connect/message/disconnect",
    "user_name": "username",
    "target": "target_username",
    "message": "message_text",
    "targets": ["target_username1", "target_username2"]
}
•	action: Specifies the action to be performed (connect, message, 
disconnect).
•	user_name: The username of the client sending the message.
•	target: The target user for the message (used in message and 
disconnect actions).
•	message: The text of the message (used in message action).
•	targets: A list of target usernames (used in connect action).
Customization
•	You can customize the server's IP address and port by modifying 
the host and port variables in the script.
python code
host = "127.0.0.1" # Change this to your server's IP address port = 7775 # 
Change this to your desired port 
Notes
•	This is a basic implementation and may need additional features 
and security measures for use in production environments.
Feel free to use and modify this chat server for your own purposes. If you 
have any questions or encounter issues, please don't hesitate to reach 
out.

